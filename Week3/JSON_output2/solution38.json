{"quality": {"code": "BAD", "text": "Code quality (beta): BAD"}, "issues": [{"code": "E261", "text": "at least two spaces before inline comment", "line": "dag = {} # DAG", "line_number": 33, "column_number": 9, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E265", "text": "block comment should start with '# '", "line": "#'''get neighboring nodes'''", "line_number": 56, "column_number": 5, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E265", "text": "block comment should start with '# '", "line": "#'''return True if there is a path between node1 and node2'''", "line_number": 79, "column_number": 5, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E114", "text": "indentation is not a multiple of      (comment)", "line": "# 'bob': ['ed', 'danna'], 'claire': ['fiona', 'george'],", "line_number": 90, "column_number": 19, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E116", "text": "unexpected indentation (comment)", "line": "# 'bob': ['ed', 'danna'], 'claire': ['fiona', 'george'],", "line_number": 90, "column_number": 19, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E114", "text": "indentation is not a multiple of      (comment)", "line": "# 'danna': [], 'ed': [], 'fiona': [], 'george': []}", "line_number": 91, "column_number": 19, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E116", "text": "unexpected indentation (comment)", "line": "# 'danna': [], 'ed': [], 'fiona': [], 'george': []}", "line_number": 91, "column_number": 19, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E261", "text": "at least two spaces before inline comment", "line": "print(f) # True", "line_number": 95, "column_number": 9, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E261", "text": "at least two spaces before inline comment", "line": "print(f) # False", "line_number": 97, "column_number": 9, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E501", "text": "Too long line (157 symbols). Try to split it into smaller lines. It will make your code easy to understand.", "line": "Below is another weighted graph `MyWDAG`. Please read the code carefully and play with it. After you understand the code, please do the following two things:", "line_number": 108, "column_number": 121, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E261", "text": "at least two spaces before inline comment", "line": "mywdag = {} # MyWDAG", "line_number": 124, "column_number": 12, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E251", "text": "unexpected spaces around keyword / parameter equals", "line": "def q2_add_edge(node1, node2, graph, weight = 1):", "line_number": 126, "column_number": 44, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E251", "text": "unexpected spaces around keyword / parameter equals", "line": "def q2_add_edge(node1, node2, graph, weight = 1):", "line_number": 126, "column_number": 46, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E713", "text": "test for membership should be 'not in'", "line": "if not node1 in graph:", "line_number": 131, "column_number": 8, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E713", "text": "test for membership should be 'not in'", "line": "if not node2 in graph:", "line_number": 133, "column_number": 8, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E265", "text": "block comment should start with '# '", "line": "#'''get neighboring nodes'''", "line_number": 138, "column_number": 5, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E0001", "text": "expected an indented block (<unknown>, line 180)", "line": "...", "line_number": 180, "column_number": 10, "category": "ERROR_PRONE", "difficulty": "HARD", "influence_on_penalty": 0}, {"code": "E112", "text": "expected an indented block", "line": "...", "line_number": 180, "column_number": 9, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E999", "text": "IndentationError: expected an indented block", "line": "...", "line_number": 180, "column_number": 9, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E261", "text": "at least two spaces before inline comment", "line": "q2_dijkstra('a', 'f', mywdag) #{'a': 10000, 'b': 5, 'c': 0, 'd': 20, 'e': 25, 'f': 35}", "line_number": 197, "column_number": 30, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}, {"code": "E262", "text": "inline comment should start with '# '", "line": "q2_dijkstra('a', 'f', mywdag) #{'a': 10000, 'b': 5, 'c': 0, 'd': 20, 'e': 25, 'f': 35}", "line_number": 197, "column_number": 31, "category": "CODE_STYLE", "difficulty": "EASY", "influence_on_penalty": 0}]}
